generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @db.VarChar(255)
  prenom         String    @db.VarChar(255) @default("Bonjour")
  nom            String    @db.VarChar(255) @default("Aurevoir")
  email          String    @unique @db.VarChar(255)
  password       String    @db.VarChar(60)
  adresse        Adresse[]
  phone          String    @db.VarChar(12)  @default("0612345678")
  date_naissance DateTime  @db.Date @default(now())
  role           String    @default("client")
  active         Boolean   @default(true)
  offreId        Int?
  profiles       Profile[]
  carte_bancaire CarteBancaire[]    
  offre          Offre?    @relation(fields: [offreId], references: [id])
  commandes      Commande[]
  watchlist  String[]
}

model CarteBancaire {
  id            Int    @id @default(autoincrement())
  userId        Int
  nom_carte     String @db.VarChar(255)
  numero_carte  String @db.VarChar(20)
  expiration    DateTime  @db.Date
  cvc           Int   @db.SmallInt
  user          User   @relation(fields: [userId], references: [id])
}

model Profile {
  id        Int    @id @default(autoincrement())
  userId    Int
  nom       String @db.VarChar(255)
  avatarId  Int
  avatar    Avatar? @relation(fields: [avatarId], references: [id])
  user      User   @relation(fields: [userId], references: [id])
}

model Avatar {
  id        Int    @id @default(autoincrement())
  images    String   @db.VarChar(255)  @default("/assets/avatar/narutoShippudenAvatar.png")
  category  String
  profile   Profile[]
}

model Commande {
  id          Int        @id @default(autoincrement())
  product     String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

model Adresse {
  id            Int       @id @default(autoincrement())
  numero_rue    Int
  voie          String    @db.VarChar(255)
  code_postal   String
  ville         String    @db.VarChar(255)
  pays          String    @db.VarChar(255)
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
}

model Offre {
  id             Int    @id @default(autoincrement())
  nom            String
  type           String
  prix           Float
  video          String
  lectureSimul   Int
  appareil       String
  telechargement String @default("Non")
  pub            String @default("Avec Pub")
  audio          String
  livraison      String
  user           User[]
}
